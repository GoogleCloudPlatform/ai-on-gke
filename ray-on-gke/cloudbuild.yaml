steps:
  # - id: 'tf validate platform'
  #   name: 'hashicorp/terraform:1.0.0'
  #   script: |
  #     terraform init
  #     terraform validate
  #   dir: 'ray-on-gke/platform/'
  #   waitFor: ['-']

  # - id: 'tf apply platform'
  #   name: 'hashicorp/terraform:1.0.0'
  #   entrypoint: 'sh'
  #   args:
  #     - '-c'
  #     - |
  #       terraform apply -var=project_id=$PROJECT_ID \
  #       -var=cluster_name=cluster-$SHORT_SHA-$_PR_NUMBER \
  #       -var=region=$_ZONE -auto-approve \
  #       || ( terraform destroy -auto-approve && exit 1 )
  #   dir: 'ray-on-gke/platform/'
  #   waitFor: ['tf validate platform']

  - id: 'tf validate user'
    name: 'hashicorp/terraform:1.0.0'
    script: |
      terraform init
      terraform validate 
    dir: 'ray-on-gke/user/'
    waitFor: ['-']

  - id: 'tf apply user'
    name: 'gcr.io/$PROJECT_ID/terraform'
    entrypoint: 'sh'
    env:
      - USE_GKE_GCLOUD_AUTH_PLUGIN=True
    args:
      - '-c'
      - |
        gcloud container clusters get-credentials \
        cluster-7ee1b08-31 \
        --location $_ZONE \
        --project $PROJECT_ID
        terraform apply \
        -var=project_id=$PROJECT_ID \
        -var=namespace=$_USER_NAME_$SHORT_SHA \
        -var=service_account=$_USER_NAME-$SHORT_SHA-system-account \
        -auto-approve 
    dir: 'ray-on-gke/user/'
    allowFailure: true
    waitFor: ['tf validate user']

  - id: 'tf destroy everything'
    name: 'gcr.io/$PROJECT_ID/terraform'
    script: |
      cd ray-on-gke/user 
      terraform destroy -auto-approve
      # cd ray-on-gke/platform
      # terraform destroy -auto-approve
    waitFor: ['tf apply user']

substitutions:
  _ZONE: us-central1-c
  _USER_NAME: github
