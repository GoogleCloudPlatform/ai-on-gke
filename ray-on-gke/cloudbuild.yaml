steps:
  - id: 'tf validate platform'
    name: 'hashicorp/terraform:1.0.0'
    script: |
      terraform init || (terraform validate && exit 1)
      # terraform validate
    dir: 'ray-on-gke/platform/'
    waitFor: ['-']

#   - id: 'tf apply platform'
#     name: 'hashicorp/terraform:1.0.0'
#     env: 
#       - "TF_IN_AUTOMATION=TRUE"
#     entrypoint: 'sh'
#     args: 
#       - '-c'
#       - |
#         terraform apply -var=project_id=$PROJECT_ID \
#         -var=cluster_name=cluster-$SHORT_SHA-$_PR_NUMBER \
#         -var=region=$_ZONE \
#         -auto-approve || { terraform destroy && exit 1; }
#     dir: 'ray-on-gke/platform/'
#     waitFor: ['tf validate platform']

#   - id: 'get kube config'
#     name: 'gcr.io/cloudbuilders/gcloud'
#     entrypoint: 'sh'
#     args: 
#     - '-c'
#     - |
#       gcloud container clusters get-credentials cluster-$SHORT_SHA-$_PR_NUMBER --location $_ZONE --project $PROJECT_ID
#     waitFor: ['tf apply platform']

#   - id: 'tf validate user'
#     name: 'hashicorp/terraform:1.0.0'
#     script: |
#       terraform init
#       terraform validate 
#     dir: 'ray-on-gke/user/'
#     waitFor: ['get kube config']

#   - id: 'tf apply user'
#     name: 'hashicorp/terraform:1.0.0'
#     env:
#       - "USER_NAME=github"
#     entrypoint: 'sh'
#     args: 
#       - '-c'
#       - |
#         terraform apply \
#         -var=project_id=$PROJECT_ID \
#         -var=namespace=$_USER_NAME
#         -var=service_account=$_USER_NAME-system-account
#         || terraform destroy && exit 1
#     dir: 'ray-on-gke/platform/'
#     waitFor: ['get kube config']

#   - id: 'tf destroy'
#     name: 'hashicorp/terraform:1.0.0'
#     env: 
#       - "TF_IN_AUTOMATION=TRUE"
#     script: |
#       cd ray-on-gke/user 
#       terraform destroy 
#       cd ray-on-gke/platform
#       terraform destroy
#     waitFor: ['tf apply user']

# substitutions:
#   _ZONE: us-central1-c
#   _USER_NAME: github
