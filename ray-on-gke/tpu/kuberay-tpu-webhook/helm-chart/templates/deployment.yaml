apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.tpuWebhook.namespace.name }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuberay-tpu-webhook-sa
  namespace: {{ .Values.tpuWebhook.namespace.name }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kuberay-tpu-webhook-pod-reader
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuberay-tpu-webhook-pod-reader
subjects:
  - kind: ServiceAccount
    name: kuberay-tpu-webhook-sa
    namespace: {{ .Values.tpuWebhook.namespace.name }}
roleRef:
  kind: ClusterRole
  name: kuberay-tpu-webhook-pod-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kuberay-tpu-webhook
  name: kuberay-tpu-webhook
  namespace: {{ .Values.tpuWebhook.namespace.name }}
spec:
  replicas: {{ .Values.tpuWebhook.deployment.replicas }}
  selector:
    matchLabels:
      app:  kuberay-tpu-webhook
  template:
    metadata:
      labels:
        app:  kuberay-tpu-webhook
    spec:
      containers:
        - image: "{{ .Values.tpuWebhook.image.repository }}:{{ .Values.tpuWebhook.image.tag }}"
          imagePullPolicy: {{ .Values.tpuWebhook.image.pullPolicy }}
          name: {{ .Chart.Name }}
          args:
          - --v={{ .Values.tpuWebhook.deployment.verbosity }}
          ports:
          - name: https
            containerPort: 443
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: https
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /
              port: https
              scheme: HTTPS
          volumeMounts:
            - name: tls
              mountPath: "/etc/kuberay-tpu-webhook/tls"
              readOnly: true
      volumes:
        - name: tls
          secret:
            secretName: kuberay-tpu-webhook-certs