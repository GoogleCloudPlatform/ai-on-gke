# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:

- id: 'create a3ultra with nccl'
  name: 'gcr.io/$PROJECT_ID/terraform'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    set -e

    cd /workspace/applications/hcc/
    terraform apply \
    -var-file=a3ultra_workloads.tfvars \
    -var=project_id=$_A3ULTRA_PROJECT \
    -var=a3ultra_recipe="gke-nccl" \
    -var=gpu_type="A3 Ultra" \
    -var=node_count_gke_nccl=2 \
    -var=goog_cm_deployment_name="cloudbuild-a3u-nccl" \
    -var=a3_ultra_zone=$_A3ULTRA_ZONE \
    -var=reservation=$_A3ULTRA_RESERVATION \
    -var=placement_policy_name=$_A3ULTRA_PLACEMENT_POLICY_NAME \
    -auto-approve -no-color

    echo "pass" > /workspace/a3u_nccl_result.txt
  allowFailure: true
  waitFor: ["-"]


- id: 'cleanup a3ultra with nccl'
  name: 'gcr.io/$PROJECT_ID/terraform'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    set -e

    cd /workspace/applications/hcc/
    terraform destroy \
    -var-file=a3ultra_workloads.tfvars \
    -var=project_id=$_A3ULTRA_PROJECT \
    -var=a3ultra_recipe="gke-nccl" \
    -var=gpu_type="A3 Ultra" \
    -var=node_count_gke_nccl=2 \
    -var=goog_cm_deployment_name="cloudbuild-a3u-nccl" \
    -var=a3_ultra_zone=$_A3ULTRA_ZONE \
    -var=reservation=$_A3ULTRA_RESERVATION \
    -var=placement_policy_name=$_A3ULTRA_PLACEMENT_POLICY_NAME \
    -auto-approve -no-color
  allowFailure: true
  waitFor: ['create a3ultra with nccl']

- id: 'create a3ultra with llama7b'
  name: 'gcr.io/$PROJECT_ID/terraform'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    set -e

    cd /workspace/applications/hcc/
    terraform apply \
    -var-file=a3ultra_workloads.tfvars \
    -var=project_id=$_A3ULTRA_PROJECT \
    -var=a3ultra_recipe="llama3.1_7b_nemo_pretraining" \
    -var=gpu_type="A3 Ultra" \
    -var=node_count_nemo=2 \
    -var=goog_cm_deployment_name="cloudbuild-a3u-nccl" \
    -var=a3_ultra_zone=$_A3ULTRA_ZONE \
    -var=reservation=$_A3ULTRA_RESERVATION \
    -var=placement_policy_name=$_A3ULTRA_PLACEMENT_POLICY_NAME \
    -auto-approve -no-color

    echo "pass" > /workspace/a3u_llama7b_result.txt
  allowFailure: true
  waitFor: ["-"]


- id: 'cleanup a3ultra with llama7b'
  name: 'gcr.io/$PROJECT_ID/terraform'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    set -e

    cd /workspace/applications/hcc/
    terraform destroy \
    -var-file=a3ultra_workloads.tfvars \
    -var=project_id=$_A3ULTRA_PROJECT \
    -var=a3ultra_recipe="llama3.1_7b_nemo_pretraining" \
    -var=gpu_type="A3 Ultra" \
    -var=node_count_nemo=2 \
    -var=goog_cm_deployment_name="cloudbuild-a3u-nccl" \
    -var=a3_ultra_zone=$_A3ULTRA_ZONE \
    -var=reservation=$_A3ULTRA_RESERVATION \
    -var=placement_policy_name=$_A3ULTRA_PLACEMENT_POLICY_NAME \
    -auto-approve -no-color
  allowFailure: true
  waitFor: ['create a3ultra with llama7b']

- id: 'create a3mega with nccl'
  name: 'gcr.io/$PROJECT_ID/terraform'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    set -e

    cd /workspace/applications/hcc/
    terraform apply \
    -var-file=a3mega_workloads.tfvars \
    -var=project_id=$_A3MEGA_PROJECT \
    -var=a3mega_recipe="gke-nccl" \
    -var=gpu_type="A3 Mega" \
    -var=node_count_gke_nccl=2 \
    -var=goog_cm_deployment_name="cloudbuild-a3m-nccl" \
    -var=a3_mega_zone=$_A3MEGA_ZONE \
    -var=reservation=$_A3MEGA_RESERVATION \
    -var=placement_policy_name=$_A3MEGA_PLACEMENT_POLICY_NAME \
    -auto-approve -no-color

    echo "pass" > /workspace/a3m_nccl_result.txt
  allowFailure: true
  waitFor: ["-"]


- id: 'cleanup a3mega with nccl'
  name: 'gcr.io/$PROJECT_ID/terraform'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    set -e

    cd /workspace/applications/hcc/
    terraform destroy \
    -var-file=a3mega_workloads.tfvars \
    -var=project_id=$_A3MEGA_PROJECT \
    -var=a3mega_recipe="gke-nccl" \
    -var=gpu_type="A3 Mega" \
    -var=node_count_gke_nccl=2 \
    -var=goog_cm_deployment_name="cloudbuild-a3m-nccl" \
    -var=a3_mega_zone=$_A3MEGA_ZONE \
    -var=reservation=$_A3MEGA_RESERVATION \
    -var=placement_policy_name=$_A3MEGA_PLACEMENT_POLICY_NAME \
    -auto-approve -no-color
  allowFailure: true
  waitFor: ['create a3mega with nccl']

- id: 'create a3mega with llama7b'
  name: 'gcr.io/$PROJECT_ID/terraform'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    set -e

    cd /workspace/applications/hcc/
    terraform apply \
    -var-file=a3mega_workloads.tfvars \
    -var=project_id=$_A3MEGA_PROJECT \
    -var=a3mega_recipe="llama3.1_7b_nemo_pretraining" \
    -var=gpu_type="A3 Mega" \
    -var=node_count_nemo=2 \
    -var=goog_cm_deployment_name="cloudbuild-a3m-nccl" \
    -var=a3_ultra_zone=$_A3MEGA_ZONE \
    -var=reservation=$_A3MEGA_RESERVATION \
    -var=placement_policy_name=$_A3MEGA_PLACEMENT_POLICY_NAME \
    -auto-approve -no-color

    echo "pass" > /workspace/a3m_llama7b_result.txt
  allowFailure: true
  waitFor: ["-"]


- id: 'cleanup a3mega with llama7b'
  name: 'gcr.io/$PROJECT_ID/terraform'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    set -e

    cd /workspace/applications/hcc/
    terraform destroy \
    -var-file=a3mega_workloads.tfvars \
    -var=project_id=$_A3MEGA_PROJECT \
    -var=a3mega_recipe="llama3.1_7b_nemo_pretraining" \
    -var=gpu_type="A3 Mega" \
    -var=node_count_nemo=2 \
    -var=goog_cm_deployment_name="cloudbuild-a3m-nccl" \
    -var=a3_ultra_zone=$_A3MEGA_ZONE \
    -var=reservation=$_A3MEGA_RESERVATION \
    -var=placement_policy_name=$_A3MEGA_PLACEMENT_POLICY_NAME \
    -auto-approve -no-color
  allowFailure: true
  waitFor: ['create a3mega with llama7b']






- id: 'check result'
  name: 'gcr.io/$PROJECT_ID/terraform'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    if [[ $(cat /workspace/a3u_nccl_result.txt) != "pass" ]]; then
      echo "a3ultra with nccl creation failed"
      exit 1
    fi

    if [[ $(cat /workspace/a3u_llama7b_result.txt) != "pass" ]]; then
      echo "a3ultra with llama7b creation failed"
      exit 1
    fi

    if [[ $(cat /workspace/a3u_nccl_result.txt) != "pass" ]]; then
      echo "a3ultra with nccl creation failed"
      exit 1
    fi

    if [[ $(cat /workspace/a3u_llama7b_result.txt) != "pass" ]]; then
      echo "a3ultra with llama7b creation failed"
      exit 1
    fi
  waitFor: ['cleanup a3ultra with nccl', 'cleanup a3ultra with llama7b', 'cleanup a3mega with nccl', 'cleanup a3mega with llama7b']

substitutions:
  _A3ULTRA_ZONE: europe-west1-b
  _A3ULTRA_PROJECT: ""
  _A3ULTRA_RESERVATION: ""
  _A3ULTRA_PLACEMENT_POLICY_NAME: ""
  _A3MEGA_ZONE: australia-southeast1-c
  _A3MEGA_PROJECT: ""
  _A3MEGA_RESERVATION: ""
  _A3MEGA_PLACEMENT_POLICY_NAME: ""
  _REGION: us-east4
  _USER_NAME: github
  _AUTOPILOT_CLUSTER: "false"
  _BUILD_ID: ${BUILD_ID:0:8}
logsBucket: gs://ai-on-gke-build-logs
options:
  substitutionOption: "ALLOW_LOOSE"
  machineType: "E2_HIGHCPU_8"
timeout: 5400s
availableSecrets:
  secretManager:
  - versionName: projects/gke-ai-eco-dev/secrets/cloudbuild-kaggle-username/versions/latest
    env: "KAGGLE_USERNAME"
  - versionName: projects/gke-ai-eco-dev/secrets/cloudbuild-kaggle-key/versions/latest
    env: "KAGGLE_KEY"
