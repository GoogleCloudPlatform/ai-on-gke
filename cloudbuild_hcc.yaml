# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  - id: "validate cluster"
    name: "hashicorp/terraform:latest"
    script: |
      terraform init -no-color
      terraform validate -no-color
    dir: "applications/hcc/"
    waitFor: ["-"]
  
  - id: 'create a3m with nccl'
    name: 'hashicorp/terraform:latest'
    entrypoint: 'sh'
    args:
    - '-c'
    - |
      set -e
  
      cd /workspace/applications/hcc/
      terraform apply \
      -var-file=a3mega_workloads.tfvars \
      -var=project_id=$_A3MEGA_PROJECT \
      -var=a3mega_recipe="gke-nccl" \
      -var=gpu_type="A3 Mega" \
      -var=node_count_gke_nccl=2 \
      -var=goog_cm_deployment_name="cloudbuild-a3m-nccl" \
      -var=a3_mega_zone=$_A3MEGA_ZONE \
      -var=reservation=$_A3MEGA_RESERVATION \
      -var=placement_policy_name=$_A3MEGA_PLACEMENT_POLICY_NAME \
      -auto-approve -no-color
  
      echo "cluster creation successfully" > /workspace/a3m_nccl_result.txt
    waitFor: ["validate cluster"]
  
  - id: 'wait for a3m nccl job to complete'
    name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'sh'
    args:
    - '-c'
    - |
      set -e
  
      gcloud container clusters get-credentials cloudbuild-a3m-nccl --location $_A3MEGA_REGION --project $_A3MEGA_PROJECT
      if kubectl wait --for=condition=complete=true job/nccl-test-w-0 -n default --timeout=300s; then
        echo "Job 'nccl-test-w-0' completed successfully."
        echo "nccl job start successfully" > /workspace/a3m_nccl_result.txt
      else
        wait_exit_status=$? 
        echo "Job 'nccl-test-w-0' did not complete within 300 seconds or the job failed."
        exit 1 
      fi
    waitFor: ['create a3m with nccl']
  
  - id: 'check a3m nccl result'
    name: 'gcr.io/cloud-builders/gsutil'
    entrypoint: 'sh'
    args:
    - '-c'
    - |
      set -e
      gcs_file_path=gs://${_A3MEGA_PROJECT}-cloudbuild-a3m-nccl-result/all_gather_perf*.txt
      timeout=300 
      interval=20 
      end_time=$(($(date +%s) + timeout))
      while [ $(date +%s) -lt $end_time ]; do
          (gsutil cat "$gcs_file_path" 2>/dev/null | grep -q "Avg bus bandwidth") && {
              echo "Success: Found required content in ${gcs_file_path}."
              echo "nccl log found with necessary contents" > /workspace/a3m_nccl_result.txt
              exit 0
          }
          sleep $interval
      done
      echo "Error: Timeout after ${timeout} seconds waiting for content in ${gcs_file_path}."
      exit 1
    waitFor: ["wait for a3m nccl job to complete"]
  
  - id: 'cleanup a3m with nccl'
    name: 'hashicorp/terraform:latest'
    entrypoint: 'sh'
    args:
    - '-c'
    - |
      set -e
  
      cd /workspace/applications/hcc/
      terraform destroy \
      -var-file=a3mega_workloads.tfvars \
      -var=project_id=$_A3MEGA_PROJECT \
      -var=a3mega_recipe="gke-nccl" \
      -var=gpu_type="A3 Mega" \
      -var=node_count_gke_nccl=2 \
      -var=goog_cm_deployment_name="cloudbuild-a3m-nccl" \
      -var=a3_mega_zone=$_A3MEGA_ZONE \
      -var=reservation=$_A3MEGA_RESERVATION \
      -var=placement_policy_name=$_A3MEGA_PLACEMENT_POLICY_NAME \
      -auto-approve -no-color
    waitFor: ["check a3m nccl result"]
  
  
  - id: 'create a3m with nemo'
    name: 'hashicorp/terraform:latest'
    entrypoint: 'sh'
    args:
    - '-c'
    - |
      set -e
  
      cd /workspace/applications/hcc/
      terraform apply \
      -var-file=a3mega_workloads.tfvars \
      -var=project_id=$_A3MEGA_PROJECT \
      -var=a3mega_recipe="llama3.1_7b_nemo_pretraining" \
      -var=gpu_type="A3 Mega" \
      -var=node_count_llama_3_7b=2 \
      -var=goog_cm_deployment_name="cloudbuild-a3m-nemo" \
      -var=a3_mega_zone=$_A3MEGA_ZONE \
      -var=reservation=$_A3MEGA_RESERVATION \
      -var=placement_policy_name=$_A3MEGA_PLACEMENT_POLICY_NAME \
      -auto-approve -no-color
  
      echo "cluster creation successfully" > /workspace/a3m_nemo_result.txt
    waitFor: ["cleanup a3m with nccl"]
  
  - id: 'wait for a3m nemo job to complete'
    name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'sh'
    args:
    - '-c'
    - |
      set -e
  
      gcloud container clusters get-credentials cloudbuild-a3m-nemo --location $_A3MEGA_REGION --project $_A3MEGA_PROJECT
      if kubectl wait --for=condition=complete=true job/benchmark -n default --timeout=3000s; then
        echo "Job 'benchmark' completed successfully."
        echo "nemo job start successfully" > /workspace/a3m_nemo_result.txt
      else
        wait_exit_status=$? 
        echo "Job 'benchmark' did not complete within 3000 seconds or the job failed."
        exit 1 
      fi
    waitFor: ['create a3m with nemo']
  
  - id: 'check a3m nemo result'
    name: 'gcr.io/cloud-builders/gsutil'
    entrypoint: 'sh'
    args:
    - '-c'
    - |
      set -e
  
      gcs_file_path="gs://${_A3MEGA_PROJECT}-cloudbuild-a3m-nemo-result/nemo-experiments/benchmark-*/dllogger/rank-0/dllogger.json"
      keyword1="reduced_train_loss"
      keyword2="validation_step_timing"
      timeout=300  
      interval=20  
      end_time=$(($(date +%s) + timeout))
      echo "Polling for GCS file(s): ${gcs_file_path}"
      echo "Requiring keywords: '${keyword1}' AND '${keyword2}'"
      echo "Timeout: ${timeout}s, Interval: ${interval}s."
      while [ $(date +%s) -lt $end_time ]; do
          echo "Checking GCS at $(date)..."
          if gsutil cat "$gcs_file_path" 2>/dev/null | awk -v k1="$keyword1" -v k2="$keyword2" '
              $0 ~ k1 { found_k1 = 1 }
              $0 ~ k2 { found_k2 = 1 }
              END { exit !(found_k1 && found_k2) }
          '; then
              echo "Success: Found file(s) with both required keywords."
              echo "nccl log found with necessary contents" > /workspace/a3m_nemo_result.txt
              exit 0 
          else
              echo "File(s) or required keywords not ready yet. Retrying..."
          fi
          sleep $interval
      done
      echo "Error: Timeout after ${timeout} seconds waiting for content in ${gcs_file_path}."
      exit 1
    waitFor: ["wait for a3m nemo job to complete"]
  
  - id: 'cleanup a3m with nemo'
    name: 'hashicorp/terraform:latest'
    entrypoint: 'sh'
    args:
    - '-c'
    - |
      set -e
  
      cd /workspace/applications/hcc/
      terraform destroy \
      -var-file=a3mega_workloads.tfvars \
      -var=project_id=$_A3MEGA_PROJECT \
      -var=a3mega_recipe="llama3.1_7b_nemo_pretraining" \
      -var=gpu_type="A3 Mega" \
      -var=node_count_llama_3_7b=2 \
      -var=goog_cm_deployment_name="cloudbuild-a3m-nemo" \
      -var=a3_ultra_zone=$_A3MEGA_ZONE \
      -var=reservation=$_A3MEGA_RESERVATION \
      -var=placement_policy_name=$_A3MEGA_PLACEMENT_POLICY_NAME \
      -auto-approve -no-color
    waitFor: ['check a3m nemo result']
  
substitutions:
  _A3ULTRA_ZONE: ""
  _A3ULTRA_REGION: ""
  _A3ULTRA_PROJECT: ""
  _A3ULTRA_RESERVATION: ""
  _A3ULTRA_PLACEMENT_POLICY_NAME: ""
  _A3MEGA_ZONE: ""
  _A3MEGA_REGION: ""
  _A3MEGA_PROJECT: ""
  _A3MEGA_RESERVATION: ""
  _A3MEGA_PLACEMENT_POLICY_NAME: ""
  # logsBucket: gs://ai-on-gke-build-logs
options:
  logging: CLOUD_LOGGING_ONLY
  substitutionOption: "ALLOW_LOOSE"
timeout: 9000s