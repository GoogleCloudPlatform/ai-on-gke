apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: autometric-failover
  name: autometric-failover-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: autometric-failover
    app.kubernetes.io/component: controller
  annotations: {}
  name: controller
  namespace: autometric-failover-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: autometric-failover
    app.kubernetes.io/component: controller
  name: controller-leader-election-role
  namespace: autometric-failover-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: autometric-failover
    app.kubernetes.io/component: controller
  name: autometric-failover-controller
rules:
- apiGroups:
  - jobset.x-k8s.io
  resources:
  - jobsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - jobset.x-k8s.io
  resources:
  - jobsets/status
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: autometric-failover
    app.kubernetes.io/component: controller
  name: controller-leader-election-rolebinding
  namespace: autometric-failover-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: controller-leader-election-role
subjects:
- kind: ServiceAccount
  name: controller
  namespace: autometric-failover-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: autometric-failover
    app.kubernetes.io/component: controller
  name: autometric-failover-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: autometric-failover-controller
subjects:
- kind: ServiceAccount
  name: controller
  namespace: autometric-failover-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: autometric-failover
    app.kubernetes.io/component: controller
  name: controller
  namespace: autometric-failover-system
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
  - name: metrics-http
    port: 8082
    protocol: TCP
  selector:
    app.kubernetes.io/name: autometric-failover
    app.kubernetes.io/component: controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: autometric-failover
    app.kubernetes.io/component: controller
  name: controller
  namespace: autometric-failover-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: autometric-failover
      app.kubernetes.io/component: controller
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: autometric-failover
        app.kubernetes.io/component: controller
    spec:
      containers:
      - args:
        - --leader-elect
        command:
        - /manager
        image: controller:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - name: http
          containerPort: 8080
        - name: metrics-http
          containerPort: 8082
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 4
            memory: 4Gi
          requests:
            cpu: 1
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts: []
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: controller
      terminationGracePeriodSeconds: 10
      volumes: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: autometric-failover
    app.kubernetes.io/component: detector
  name: autometric-failover-detector
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: autometric-failover
    app.kubernetes.io/component: controller
  name: autometric-failover-detector
rules:
- apiGroups:
  - jobset.x-k8s.io
  resources:
  - jobsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - jobset.x-k8s.io
  resources:
  - jobsets/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: autometric-failover
    app.kubernetes.io/component: detector
  name: autometric-failover-detector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: autometric-failover-detector
subjects:
- kind: ServiceAccount
  name: autometric-failover-detector
  namespace: default




