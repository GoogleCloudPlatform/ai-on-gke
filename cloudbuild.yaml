steps:
- id: Execute Terraform to provision GKE 
  name: 'hashicorp/terraform:latest'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      cd platform/gke-public-standard-cluster
      terraform init -no-color
      terraform apply -auto-approve -no-color
- id: Update authorised networks
  name: gcr.io/google.com/cloudsdktool/cloud-sdk
  args:
    - '-c'
    - |
        export SHELL_IP=$$(curl https://ipinfo.io/ip) && \
        echo $$SHELL_IP && \
        gcloud container clusters update autopilot-cluster-1 --location us-central1 --enable-master-authorized-networks --master-authorized-networks $$SHELL_IP/32
        gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project umeshkumhar && \
        kubectl get pods -A
        echo ~/.kube/config > /workspace/kubeconfig.yaml
  entrypoint: bash
- id: Deploy hello-app
  name: gcr.io/google.com/cloudsdktool/cloud-sdk
  args:
    - '-c'
    - |
      export SHELL_IP=$$(curl https://ipinfo.io/ip) && \
      echo $$SHELL_IP && \
      terraform init -no-color
      terraform apply -auto-approve -no-color --kubeconfig /workspace/kubeconfig.yaml
  entrypoint: bash

- id: Optional Customization
  name: gcr.io/google.com/cloudsdktool/cloud-sdk
  args:
    - '-c'
    - |
      export SHELL_IP=$$(curl https://ipinfo.io/ip) && \
      echo $$SHELL_IP && \
      gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project umeshkumhar && \
      kubectl get pods -A && \
      kubectl run nginx2352 --image=nginx 
  entrypoint: bash
serviceAccount: 'projects/umeshkumhar/serviceAccounts/aiongke@umeshkumhar.iam.gserviceaccount.com'
options:
  logging: CLOUD_LOGGING_ONLY