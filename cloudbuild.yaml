steps:
- id: Execute Platform Provision using Terraform to provision GKE 
  name: 'hashicorp/terraform:latest'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      terraform -chdir="./platform/" init -no-color
      terraform -chdir="./platform/" apply -auto-approve -no-color
- id: Update authorised networks for private cluster to allow workload deployment
  name: gcr.io/cloudshell-images/cloudshell:latest
  args:
    - '-c'
    - |
        export SHELL_IP=$$(curl https://ipinfo.io/ip) && \
        echo $$SHELL_IP && \
        export CLUSTERNAME=$$(terraform -chdir="./platform/" output -raw cluster_name)
        export REGION=$$(terraform -chdir="./platform/" output -raw cluster_region')
        export PROJECT=$$(terraform -chdir="./platform/" output -raw project_id)
        echo $$CLUSTERNAME $$REGION $$PROJECT
        
        EXISTING_AUTH_NETS=$$(gcloud container clusters describe $$CLUSTERNAME --location $$REGION --project $$PROJECT --format "flattened(masterAuthorizedNetworksConfig.cidrBlocks[])") && \
        gcloud container clusters update $$CLUSTERNAME --location $$REGION --project $$PROJECT --enable-master-authorized-networks --master-authorized-networks $$SHELL_IP/32,$$EXISTING_AUTH_NETS,
        gcloud container clusters get-credentials $$CLUSTERNAME --region $$REGION --project $$PROJECT && \
        kubectl get pods -A
        echo ~/.kube/config > /workspace/kubeconfig.yaml
  entrypoint: bash
# - id: Deploy hello-app
#   name: gcr.io/google.com/cloudsdktool/cloud-sdk
#   args:
#     - '-c'
#     - |
#       terraform init -no-color
#       terraform apply -auto-approve -no-color --kubeconfig /workspace/kubeconfig.yaml
#   entrypoint: bash

# - id: Optional Customization
#   name: gcr.io/google.com/cloudsdktool/cloud-sdk
#   args:
#     - '-c'
#     - |
#       export SHELL_IP=$$(curl https://ipinfo.io/ip) && \
#       echo $$SHELL_IP && \
#       gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project umeshkumhar && \
#       kubectl get pods -A && \
#       kubectl run nginx2352 --image=nginx 
#   entrypoint: bash
serviceAccount: 'projects/umeshkumhar/serviceAccounts/aiongke@umeshkumhar.iam.gserviceaccount.com'
options:
  logging: CLOUD_LOGGING_ONLY