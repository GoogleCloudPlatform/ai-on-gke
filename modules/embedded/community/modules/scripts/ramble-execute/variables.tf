/**
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

variable "project_id" {
  description = "Project in which the HPC deployment will be created."
  type        = string
}

variable "deployment_name" {
  description = "Name of deployment, used to name bucket containing spack scripts."
  type        = string
}

variable "region" {
  description = "Region to place bucket containing spack scripts."
  type        = string
}

variable "labels" {
  description = "Key-value pairs of labels to be added to created resources."
  type        = map(string)
}

variable "log_file" {
  description = "Log file to write output from Ramble execute steps into"
  default     = "/var/log/ramble-execute.log"
  type        = string
}

variable "data_files" {
  description = <<-EOT
    A list of files to be transferred prior to running commands. 
    It must specify one of 'source' (absolute local file path) or 'content' (string).
    It must specify a 'destination' with absolute path where file should be placed.
  EOT
  type        = list(map(string))
  default     = []
  validation {
    condition     = alltrue([for r in var.data_files : substr(r["destination"], 0, 1) == "/"])
    error_message = "All destinations must be absolute paths and start with '/'."
  }
  validation {
    condition = alltrue([
      for r in var.data_files :
      can(r["content"]) != can(r["source"])
    ])
    error_message = "A data_file must specify either 'content' or 'source', but never both."
  }
  validation {
    condition = alltrue([
      for r in var.data_files :
      lookup(r, "content", lookup(r, "source", null)) != null
    ])
    error_message = "A data_file must specify a non-null 'content' or 'source'."
  }
}

variable "commands" {
  description = "String of commands to run within this module"
  default     = null
  type        = string
}

variable "ramble_runner" {
  description = "Runner from previous ramble-setup or ramble-execute to be chained with scripts generated by this module."
  type = object({
    type        = string
    content     = string
    destination = string
  })
}

variable "system_user_name" {
  description = "Name of the system user used to execute commands. Generally passed from the ramble-setup module."
  type        = string
}

variable "gcs_bucket_path" {
  description = "The GCS path for storage bucket and the object, starting with `gs://`."
  type        = string
}

variable "spack_profile_script_path" {
  description = <<-EOT
    Path to the Spack profile.d script.
    Can be defined explicitly, or by chaining an instance of a spack-setup module
    through a `use` setting.
    Defaults to /etc/profile.d/spack.sh if not set.
  EOT
  type        = string
  default     = "/etc/profile.d/spack.sh"
}

variable "ramble_profile_script_path" {
  description = <<-EOT
    Path to the Ramble profile.d script. Created by an instance of ramble-setup.
    Can be defined explicitly, or by chaining an instance of a ramble-setup module
    through a `use` setting.
  EOT
  type        = string
}
